@using BlazorDatasheet.Interfaces
@using BlazorDatasheet.Util
@using BlazorDatasheet.Validation
@inherits BaseEditor<string>

<input
    @bind="EditedValue"
    @bind:event="oninput"
    class="text-input"
    style="@CssUtil.GetStyledInput(Cell)"
    @ref="InputRef"/>
<div class="select-list">
    @foreach (var val in values)
    {
        <div class="select-item"
             @onmouseup="() => { EditedValue = val; this.AcceptEdit(); }">
            @val
        </div>
    }
</div>

@code {

    private string[] values = Array.Empty<string>();

    private IReadOnlyCell Cell;

    public override void BeforeEdit(IReadOnlyCell cell)
    {
        Cell = cell;

        foreach (var validator in Cell.Validators)
            if (validator is SourceValidator)
            {
                values = ((SourceValidator)validator).ValidationSource.ToArray();
                break;
            }
    }

    public override void BeginEdit(EditEntryMode entryMode, IReadOnlyCell cell, string key)
    {
        if (entryMode == EditEntryMode.Mouse)
        {
            EditedValue = cell.GetValue<string>();
        }
        else if (entryMode == EditEntryMode.Key)
        {
            EditedValue = key;
        }

        if (EditedValue == null)
            EditedValue = string.Empty;
    }

}