@using BlazorDatasheet.Model
@inherits BaseEditorComponent

<input
    type="date"
    class="date-input"
    @bind="EditDate"
    @onclick="() => IsSoftEdit = false"
    @bind:event="oninput"
    @ref="InputRef"/>

@code {

    public override void BeginEdit(EditEntryMode entryMode, Cell cell, string key)
    {
        var canParse = DateTime.TryParse(cell.Value, out DateTime parsedDateTime);
        if (!canParse)
            EditString = DateTime.Now.ToString();
        else
            EditString = cell.Value;

        if (entryMode == EditEntryMode.Key)
        {
    // If we are typing a number, set it to the first char in the date string, (e.g first part of day or month)
            if (char.IsNumber((char)key.First()))
            {
                var newDateString = key + EditString?.Substring(1, EditString.Length - 1);
                if (DateTime.TryParse(newDateString, out var newDate))
                    EditString = newDateString;
                else
                    EditString = DateTime.Now.ToString();
            }
            else
            {
                EditString = DateTime.Now.ToString();
            }

            IsSoftEdit = true;
        }

        StateHasChanged();
    }

    private ElementReference InputRef;

    private DateTime? EditDate
    {
        set { EditString = value.ToString(); }
        get { return String.IsNullOrEmpty(EditString) ? null : DateTime.Parse(EditString); }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InputRef.FocusAsync();
            await base.OnAfterRenderAsync(firstRender);
        }
    }

    public override bool CanAcceptEdit() => true;
    public override bool CanCancelEdit() => true;

}