@using BlazorDatasheet.Model
@using BlazorDatasheet.Interfaces
@implements ICellEditor

@code {

    [Parameter]
    public EditorManager EditorManager { get; set; }

    public bool EditedValue
    {
        get => EditorManager.GetEditedValue<bool>();
        set => EditorManager.SetEditedValue<bool>(value);
    }

    public void BeginEdit(EditEntryMode entryMode, IWriteableCell cell, string key)
    {
        var canParse = bool.TryParse(cell.GetValue<string>(), out bool parsedValue);
        if (!canParse)
        {
            this.EditorManager.CancelEdit();
            return;
        }

        EditedValue = parsedValue;

        if (entryMode == EditEntryMode.Mouse)
        {
            var newValue = !parsedValue;
            EditedValue = newValue;
        }

        if (entryMode == EditEntryMode.Key)
        {
            if (key.ToLower() == "y")
            {
                EditedValue = true;
            }
            else if (key.ToLower() == "n")
            {
                EditedValue = false;
            }
            else if (key == "Space")
            {
                EditedValue = !parsedValue;
            }
        }

        EditorManager.AcceptEdit();
    }

    public bool HandleKey(string key)
    {
        return false;
    }

    public bool CanAcceptEdit() => true;
    public bool CanCancelEdit() => true;

    public bool HandleKey(string key, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey)
    {
        return false;
    }

}