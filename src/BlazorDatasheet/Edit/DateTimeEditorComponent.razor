@using BlazorDatasheet.Model
@using BlazorDatasheet.Interfaces
@implements ICellEditor

<input
    type="date"
    class="date-input"
    @bind="EditedValue"
    @bind:event="oninput"
    @ref="InputRef"/>

@code {

    [Parameter]
    public EditorManager EditorManager { get; set; }

    private ElementReference InputRef;

    public DateTime EditedValue
    {
        get => EditorManager.GetEditedValue<DateTime>();
        set => EditorManager.SetEditedValue(value);
    }

    public void BeginEdit(EditEntryMode entryMode, IWriteableCell cell, string key)
    {
        var canParse = DateTime.TryParse(cell.GetValue<string>(), out DateTime parsedDateTime);
        EditedValue = canParse ? parsedDateTime : DateTime.Now;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InputRef.FocusAsync();
            await base.OnAfterRenderAsync(firstRender);
        }
    }

    public bool CanAcceptEdit() => true;
    public bool CanCancelEdit() => true;

    public bool HandleKey(string key, bool ctrlKey, bool shiftKey, bool altKey, bool metaKey)
    {
        return false;
    }

}